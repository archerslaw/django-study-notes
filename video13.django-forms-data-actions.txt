1.#vim urls.py
url(r'^blog/register/$', 'blog.views.register')

2.deal with the GET/POST request.
#vim blog/views.py
from django import forms
from django.shortcuts import render_to_response
from django.http import HttpResponse

class UserForm(forms.Form):
    name = forms.CharField()

def register(req):
    # if this is a POST request we need to process the form data
    if req.method == 'POST':
        # create a form instance and populate it with data from the request
        form = UserForm(req.POST)
        # check whether it's valid
        if form.is_valid():
            # process the data in form.cleaned_data as required
            print form.cleaned_data
            return HttpResponse("OK")
    # if a GET (or any other method) we'll create a blank form
    else:
        form = UserForm()
    return render_to_response('register.html', {'form': form})

3.modify the template.
#mkdir $project/$blog/template
#vim template/register.html
<form method="post">
    {{ form }}
    <input type="submit" value="OK" />
</form>

4.#python manage.py runserver

5.deal with "CSFR verification failed" error.
You can customize this page using CSRF_FAILURE_VIEW setting.
#vim settings.py
MIDDLEWARE_CLASSES = {
    ...
    #'django.middleware.csrf.CsrfViewMiddleware',
    ...
}
